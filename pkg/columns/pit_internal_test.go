package columns

import (
	"reflect"
	"testing"
)

func TestMarkLinesToRemove(t *testing.T) {
	p := NewPit(13, 6)
	p = Pit{
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 1, 0, 0, 1, 0},
		{1, 1, 1, 1, 1, 1},
		{1, 1, 0, 1, 1, 1},
	}
	expected := Pit{
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, -1, 0, 0, -1, 0},
		{-1, -1, -1, -1, -1, -1},
		{1, -1, 0, -1, -1, -1},
	}
	p.markTilesToRemove()
	if !reflect.DeepEqual(p, expected) {
		t.Errorf("Expected %v, got %v", expected, p)
	}
}

func TestMarkLinesToRemoveDiagonal(t *testing.T) {
	p := NewPit(13, 6)
	p = Pit{
		{1, 0, 0, 0, 0, 1},
		{0, 1, 0, 0, 1, 0},
		{0, 0, 1, 1, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{1, 0, 0, 0, 0, 1},
		{0, 1, 0, 0, 1, 0},
		{0, 0, 1, 1, 0, 0},
	}
	expected := Pit{
		{-1, 0, 0, 0, 0, -1},
		{0, -1, 0, 0, -1, 0},
		{0, 0, -1, -1, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{-1, 0, 0, 0, 0, -1},
		{0, -1, 0, 0, -1, 0},
		{0, 0, -1, -1, 0, 0},
	}
	p.markTilesToRemove()
	if !reflect.DeepEqual(p, expected) {
		t.Errorf("Expected %v, got %v", expected, p)
	}
}
func TestSettle(t *testing.T) {
	p := NewPit(13, 6)
	p = Pit{
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 1, 2, 0, 0, 0},
		{-1, -1, -1, 0, 0, 1},
		{1, 2, 3, 1, 4, 1},
	}
	expected := Pit{
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0},
		{0, 1, 2, 0, 0, 1},
		{1, 2, 3, 1, 4, 1},
	}
	p.settle()
	if !reflect.DeepEqual(p, expected) {
		t.Errorf("Expected %v, got %v", expected, p)
	}
}
